{"version":3,"sources":["actions/request.js","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/LoadableComponent.js","components/Dashboard.js","security.js","components/Layout/Header.js","components/ComponentUtilities.js","components/ItemForm.js","components/Project/WriteProject.js","components/Project/AddProject.js","components/Project/UpdateProject.js","actions/taskActions.js","components/Task/TaskTypes.js","components/Task/Task.js","components/Task/TaskBoardColumn.js","components/Task/TaskBoard.js","reducers/projectReducer.js","reducers/taskReducer.js","reducers/requestReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Task/WriteTask.js","components/Task/AddTask.js","components/Task/UpdateTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","actions/securityActions.js","components/UserManagement/Login.js","components/UserManagement/SecuredRoute.js","App.js","serviceWorker.js","index.js"],"names":["request","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","successAction","requestFn","successCallback","res","wrap","_context","prev","next","type","sent","payload","data","t0","response","stop","this","_x","_x2","_x3","_x4","apply","arguments","makeRequest","action","actionFn","history","handleRequest","push","ProjectItem","_this","project","props","react_default","createElement","className","projectIdentifier","projectName","description","Link","to","concat","id","onClick","deleteProject","Component","connect","window","confirm","urlRoot","axios","delete","then","CreateProjectButton","Fragment","LoadableComponent","isFetching","role","o","errors","keys","length","object","itemFn","elements","key","hasOwnProperty","mapToElements","e","Error","value","children","state","Dashboard","getProjects","projects","components_LoadableComponent","map","p","i","Project_ProjectItem","get","setJwtToken","token","localStorage","setItem","jwt_decode","sub","console","log","removeItem","getLoggedInUser","username","HeaderItem","content","interceptors","use","jwtToken","headers","newToken","error","status","undefined","Promise","reject","Header","loggedInUser","data-toggle","data-target","logOut","loggedIn","security","ItemForm","onSubmit","preventDefault","submitItem","objectSpread","item","getSelectOptions","_this2","fields","titleFragment","f","tag","classnames","is-invalid","name","placeholder","onChange","disabled","options","WriteProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","target","setState","prevState","defineProperty","startDate","endDate","prevProps","canModifyIdentifier","title","components_ItemForm","submitProject","AddProject","Project_WriteProject","createProject","post","UpdateProject","getProject","match","params","updateProject","put","projectId","Priority","1","2","3","Status","TO_DO","IN_PROGRESS","DONE","Task","task","priorityString","priority","priorityClass","taskSequence","summary","acceptanceCriteria","deleteTask","taskId","TaskBoardColumn","tasks","filter","components_Task_Task","taskClasses","TaskBoard","getTasks","taskColumns","classes","TaskBoardColumn_TaskBoardColumn","initialState","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","WriteTask","dueDate","_this3","subtitle","submitTask","AddTask","Task_WriteTask","addTask","UpdateTask","getTask","updateTask","Landing","Redirect","Register","registration","fullName","password","confirmPassword","newUser","createNewUser","Login","login","user","logIn","SecuredRoute","component","otherProps","objectWithoutProperties","Route","assign","render","App","es","BrowserRouter","Layout_Header","exact","path","UserManagement_SecuredRoute","Boolean","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.30b879e3.chunk.js","sourcesContent":["import { REQUEST_STARTS, REQUEST_SUCCEEDS, REQUEST_FAILS } from './types';\n\nexport default async (dispatch, successAction, requestFn, successCallback) => {\n  dispatch({\n    type: REQUEST_STARTS\n  });\n  try {\n    const res = await requestFn();\n    successCallback && successCallback(res);\n    if (successAction) {\n      dispatch({\n        type: successAction,\n        payload: res && res.data\n      });\n    }\n    dispatch({\n      type: REQUEST_SUCCEEDS\n    });\n  } catch (e) {\n    if (!e.response) {\n      // client side error (ie. bug) - we want this to appear in the console\n      throw e;\n    }\n    dispatch({\n      type: REQUEST_FAILS,\n      payload: e.response.data\n    });\n  }\n};\n","export const GET_ERRORS = 'GET_ERRORS';\nexport const GET_PROJECTS = 'GET_PROJECTS';\nexport const GET_PROJECT = 'GET_PROJECT';\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\n\nexport const GET_TASKS = 'GET_TASKS';\nexport const GET_TASK = 'GET_TASK';\nexport const ADD_TASK = 'ADD_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\n\nexport const REQUEST_STARTS = 'REQUEST_STARTS';\nexport const REQUEST_SUCCEEDS = 'REQUEST_SUCCEEDS';\nexport const REQUEST_FAILS = 'REQUEST_FAILS';\n\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\n","import axios from 'axios';\nimport handleRequest from './request';\nimport { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from './types';\n\nconst makeRequest = (action, actionFn, history) => dispatch => {\n  handleRequest(dispatch, action, () => actionFn('/api/project'), () => history && history.push('/dashboard'));\n};\n\nexport const createProject = (project, history) => makeRequest(null, urlRoot => axios.post(urlRoot, project), history);\n\nexport const updateProject = (project, history) =>\n  makeRequest(null, urlRoot => axios.put(`${urlRoot}/${project.id}`, project), history);\n\nexport const getProjects = () => makeRequest(GET_PROJECTS, urlRoot => axios.get(urlRoot));\n\nexport const getProject = (id, history) => makeRequest(GET_PROJECT, urlRoot => axios.get(`${urlRoot}/${id}`));\n\nexport const deleteProject = id => {\n  if (!window.confirm('Are you sure you want to to delete this project?')) {\n    return;\n  }\n  return makeRequest(DELETE_PROJECT, urlRoot =>\n    axios.delete(`${urlRoot}/${id}`).then(() => {\n      return {\n        data: id\n      };\n    })\n  );\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteProject } from '../../actions/projectActions';\n\nclass ProjectItem extends Component {\n  render() {\n    const project = this.props.project;\n    const deleteProject = () => this.props.deleteProject(project.id);\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/taskBoard/${project.id}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\">Task Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.id}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\">Update Project Info</i>\n                  </li>\n                </Link>\n                <li className=\"list-group-item delete\" onClick={deleteProject}>\n                  <i className=\"fa fa-minus-circle pr-1\">Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProject }\n)(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function CreateProjectButton() {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\n\nconst mapToElements = (object, itemFn) => {\n  if (!object) {\n    return undefined;\n  }\n  const elements = [];\n  for (var key in object) {\n    if (object.hasOwnProperty(key)) {\n      elements.push(itemFn(key, object[key]));\n    }\n  }\n  return <React.Fragment>{elements}</React.Fragment>;\n};\n\nconst isEmpty = o => !o || Object.keys(o).length === 0;\n\nconst errorsAsObject = e => {\n  if (e === Object(e)) {\n    return e;\n  } else {\n    // 'somehow' we got a string instead of an Object\n    // (Actually I know this what happens when the server is down)\n    return {\n      Error: e\n    };\n  }\n};\n\nclass LoadableComponent extends Component {\n  render() {\n    if (this.props.isFetching) {\n      return (\n        <div className=\"container\">\n          <i className=\"fas fa-spinner fa-spin\" role=\"status\" />\n        </div>\n      );\n    }\n    if (!isEmpty(this.props.errors)) {\n      return mapToElements(errorsAsObject(this.props.errors), (key, value) => {\n        return (\n          <div className=\"alert alert-danger text-center\" key={key} role=\"alert\">\n            {value}\n          </div>\n        );\n      });\n    }\n    return this.props.children;\n  }\n}\n\nLoadableComponent.propTypes = {\n  errors: PropTypes.object,\n  isFetching: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isFetching: state.request.isFetching !== false,\n  errors: state.request.errors\n});\n\nexport default connect(mapStateToProps)(LoadableComponent);\n","import React, { Component } from 'react';\nimport ProjectItem from './Project/ProjectItem';\nimport CreateProjectButton from './Project/CreateProjectButton';\nimport { connect } from 'react-redux';\nimport { getProjects } from '../actions/projectActions';\nimport { PropTypes } from 'prop-types';\nimport LoadableComponent from './LoadableComponent';\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n  render() {\n    const projects = this.props.projects;\n    return (\n      <LoadableComponent>\n        <div className=\"projects\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <h1 className=\"display-4 text-center\">Projects</h1>\n                <br />\n                <CreateProjectButton />\n                <br />\n                <hr />\n                {projects.map((p, i) => (\n                  <ProjectItem project={p} key={i} />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </LoadableComponent>\n    );\n  }\n}\nDashboard.propTypes = {\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  projects: state.project.projects\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\n// HTTP spec says headers are case insensitive. Tomcat converts to lower case.\nconst AUTHORIZATION = 'authorization';\n\nconst setJwtToken = token => {\n  if (token) {\n    localStorage.setItem('jwtToken', token);\n    localStorage.setItem('username', jwt_decode(token).sub);\n  } else {\n    console.log('clearing jwt token');\n    localStorage.removeItem('jwtToken', token);\n    localStorage.removeItem('username');\n  }\n};\n\nexport const getLoggedInUser = () => localStorage.username;\nexport const logOut = () => setJwtToken(undefined);\n\naxios.interceptors.request.use(function(request) {\n  if (localStorage.jwtToken) {\n    request.headers[AUTHORIZATION] = 'Bearer ' + localStorage.jwtToken;\n  }\n  return request;\n});\n\naxios.interceptors.response.use(\n  function(response) {\n    const newToken = response.headers[AUTHORIZATION];\n    if (newToken) {\n      setJwtToken(newToken);\n    }\n    return response;\n  },\n  function(error) {\n    if (error.response.status === 401) {\n      setJwtToken(undefined);\n    }\n    return Promise.reject(error);\n  }\n);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getLoggedInUser, logOut } from '../../security';\nimport { connect } from 'react-redux';\n\nfunction HeaderItem(props) {\n  return (\n    <li className=\"nav-item\">\n      <Link to={props.to} className=\"nav-link\" onClick={props.onClick}>\n        {props.content}\n      </Link>\n    </li>\n  );\n}\n\nclass Header extends Component {\n  render() {\n    const loggedInUser = getLoggedInUser();\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            Personal Project Management Tool\n          </Link>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n            <ul className=\"navbar-nav mr-auto\">{loggedInUser && <HeaderItem to=\"/dashboard\" content=\"Dashboard\" />}</ul>\n\n            <ul className=\"navbar-nav ml-auto\">\n              {!loggedInUser && <HeaderItem to=\"/register\" content=\"Sign Up\" />}\n              {!loggedInUser && <HeaderItem to=\"/login\" content=\"Log In\" />}\n              {loggedInUser && (\n                <HeaderItem\n                  to=\"/dashboard\"\n                  content={\n                    <span>\n                      <i className=\"fas fa-user-circle mr-1\" />\n                      {loggedInUser}\n                    </span>\n                  }\n                />\n              )}\n              {loggedInUser && <HeaderItem to=\"/\" content=\"Log Out\" onClick={this.props.logOut} />}\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  loggedIn: state.security.loggedIn\n});\n\n// although the header doesn't use redux state we do want it to refresh when we log in/out.\nexport default connect(\n  mapStateToProps,\n  { logOut }\n)(Header);\n","import React from 'react';\n\nexport const mapToElements = (object, itemFn) => {\n  if (!object) {\n    return undefined;\n  }\n  const elements = [];\n  for (var key in object) {\n    if (object.hasOwnProperty(key)) {\n      elements.push(itemFn(key, object[key]));\n    }\n  }\n  return <React.Fragment>{elements}</React.Fragment>;\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { mapToElements } from './ComponentUtilities';\n\nclass ItemForm extends Component {\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.submitItem({ ...this.props.item });\n  };\n\n  getSelectOptions = type => {\n    return mapToElements(type, function(key, value) {\n      return (\n        <option key={key} value={key}>\n          {value}\n        </option>\n      );\n    });\n  };\n\n  render() {\n    const errors = this.props.errors;\n    const fields = this.props.fields;\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              {this.props.titleFragment}\n              <form onSubmit={this.onSubmit}>\n                {fields.map((f, i) => (\n                  <div className=\"form-group\" key={i}>\n                    <f.tag\n                      type={f.type}\n                      className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors[f.name]\n                      })}\n                      placeholder={f.placeholder}\n                      name={f.name}\n                      value={this.props.item[f.name] || ''}\n                      onChange={this.props.onChange}\n                      disabled={f.disabled}\n                    >\n                      {this.getSelectOptions(f.options)}\n                    </f.tag>\n                    {errors[f.name] && (\n                      <div className=\"invalid-feedback\">{errors[f.name]} </div>\n                    )}\n                  </div>\n                ))}\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nItemForm.propTypes = {\n  titleFragment: PropTypes.object.isRequired,\n  item: PropTypes.object.isRequired,\n  fields: PropTypes.array.isRequired,\n  errors: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n  submitItem: PropTypes.func.isRequired\n};\n\nexport default ItemForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ItemForm from '../ItemForm';\n\nclass WriteProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      project: {\n        id: '',\n        projectName: '',\n        projectIdentifier: '',\n        description: '',\n        startDate: '',\n        endDate: ''\n      },\n      errors: {}\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.errors !== prevProps.errors) {\n      this.setState(prevState => ({ errors: this.props.errors }));\n    }\n    if (this.props.project !== prevProps.project) {\n      this.setState(prevState => ({ project: this.props.project }));\n    }\n  }\n\n  onChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState((prevState, props) => ({\n      project: {\n        ...prevState.project,\n        [name]: value\n      }\n    }));\n  };\n\n  render() {\n    const fields = [\n      {\n        tag: 'input',\n        type: 'text',\n        name: 'projectName',\n        placeholder: 'Project Name'\n      },\n      {\n        tag: 'input',\n        type: 'text',\n        name: 'projectIdentifier',\n        placeholder: 'Project Identifier',\n        disabled: !this.props.canModifyIdentifier\n      },\n      {\n        tag: 'textarea',\n        name: 'description',\n        placeholder: 'Project Description'\n      },\n      {\n        tag: 'input',\n        type: 'date',\n        name: 'startDate'\n      },\n      {\n        tag: 'input',\n        type: 'date',\n        name: 'endDate'\n      }\n    ];\n    const titleFragment = (\n      <React.Fragment>\n        <h5 className=\"display-4 text-center\">{this.props.title}</h5>\n        <hr />\n      </React.Fragment>\n    );\n    return (\n      <ItemForm\n        item={this.state.project}\n        errors={this.state.errors}\n        fields={fields}\n        titleFragment={titleFragment}\n        onChange={this.onChange}\n        submitItem={this.props.submitProject}\n      />\n    );\n  }\n}\n\nWriteProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  canModifyIdentifier: PropTypes.bool.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object,\n  submitProject: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.request.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(WriteProject);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../actions/projectActions';\nimport WriteProject from './WriteProject';\n\nclass AddProject extends Component {\n  render() {\n    return (\n      <WriteProject\n        title=\"Create Project\"\n        canModifyIdentifier={true}\n        submitProject={project => this.props.createProject(project, this.props.history)}\n      />\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { createProject }\n)(AddProject);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProject, updateProject } from '../../actions/projectActions';\nimport WriteProject from './WriteProject';\n\nclass UpdateProject extends Component {\n  componentDidMount() {\n    this.props.getProject(this.props.match.params.id, this.props.history);\n  }\n\n  render() {\n    return (\n      <WriteProject\n        project={this.props.project}\n        title=\"Update Project\"\n        canModifyIdentifier={false}\n        submitProject={project => this.props.updateProject(project, this.props.history)}\n      />\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  updateProject: PropTypes.func.isRequired,\n  getProject: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { getProject, updateProject }\n)(UpdateProject);\n","import axios from 'axios';\nimport handleRequest from './request';\nimport { GET_TASK, GET_TASKS, UPDATE_TASK, ADD_TASK, DELETE_TASK } from './types';\n\nconst makeRequest = (projectId, action, actionFn, history) => dispatch => {\n  const requestFn = () => actionFn(`/api/project/${projectId}/task`);\n  handleRequest(dispatch, action, requestFn, () => history && history.push(`/taskBoard/${projectId}`));\n};\n\nexport const addTask = (projectId, task, history) =>\n  makeRequest(projectId, ADD_TASK, urlRoot => axios.post(urlRoot, task), history);\n\nexport const getTask = (projectId, taskId) =>\n  makeRequest(projectId, GET_TASK, urlRoot => axios.get(`${urlRoot}/${taskId}`));\n\nexport const getTasks = projectId => makeRequest(projectId, GET_TASKS, urlRoot => axios.get(urlRoot));\n\nexport const updateTask = (projectId, task, history) =>\n  makeRequest(projectId, UPDATE_TASK, urlRoot => axios.put(`${urlRoot}/${task.id}`, task), history);\n\nexport const deleteTask = (projectId, taskId) => {\n  if (!window.confirm('Are you sure you want to to delete this task?')) {\n    return;\n  }\n  return makeRequest(projectId, DELETE_TASK, urlRoot =>\n    axios.delete(`${urlRoot}/${taskId}`).then(() => {\n      return {\n        data: taskId\n      };\n    })\n  );\n};\n","export const Priority = {\n  1: 'HIGH',\n  2: 'MEDIUM',\n  3: 'LOW'\n};\n\nexport const Status = {\n  TO_DO: 'To Do',\n  IN_PROGRESS: 'In Progress',\n  DONE: 'Done'\n};\n","import React, { Component } from 'react';\nimport { Priority } from './TaskTypes';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { deleteTask } from '../../actions/taskActions';\nimport { connect } from 'react-redux';\n\nclass Task extends Component {\n  render() {\n    const task = this.props.task;\n    const priorityString = Priority[task.priority];\n    const priorityClass = task.priority === 1 ? 'bg-danger text-light' : '';\n    const deleteTask = () =>\n      this.props.deleteTask(this.props.projectId, task.id);\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {task.taskSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{task.summary}</h5>\n          <p className=\"card-text text-truncate \">{task.acceptanceCriteria}</p>\n          <Link\n            to={`/taskBoard/${this.props.projectId}/updateTask/${task.id}`}\n            className=\"btn btn-primary\"\n          >\n            View/Update\n          </Link>\n          <button className=\"btn btn-danger ml-4\" onClick={deleteTask}>\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nTask.propTypes = {\n  projectId: PropTypes.string.isRequired,\n  task: PropTypes.object.isRequired,\n  deleteTask: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteTask }\n)(Task);\n","import React, { Component } from 'react';\nimport Task from './Task';\nimport PropTypes from 'prop-types';\nimport { Status } from './TaskTypes';\n\nexport default class TaskBoardColumn extends Component {\n  render() {\n    const tasks = this.props.tasks\n      .filter(task => task.status === this.props.status)\n      .map(task => (\n        <Task key={task.id} projectId={this.props.projectId} task={task} />\n      ));\n    return (\n      <div className=\"col-md-4\" key={this.props.status}>\n        <div className=\"card text-center mb-2\">\n          <div className={`card-header ${this.props.taskClasses}`}>\n            <h3>{Status[this.props.status]}</h3>\n          </div>\n        </div>\n        {tasks}\n      </div>\n    );\n  }\n}\n\nTaskBoardColumn.propTypes = {\n  projectId: PropTypes.string.isRequired,\n  tasks: PropTypes.array.isRequired,\n  status: PropTypes.string.isRequired,\n  taskClasses: PropTypes.string.isRequired\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTasks } from '../../actions/taskActions';\nimport TaskBoardColumn from './TaskBoardColumn';\nimport { mapToElements } from '../ComponentUtilities';\nimport LoadableComponent from '../LoadableComponent';\n\nclass TaskBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.match.params.projectId\n    };\n  }\n\n  componentDidMount() {\n    this.props.getTasks(this.state.projectId);\n  }\n\n  render() {\n    return (\n      <LoadableComponent>\n        <div className=\"container\">\n          <Link to={`/taskBoard/${this.state.projectId}/addTask`} className=\"btn btn-primary mb-3\">\n            <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n          </Link>\n          <br />\n          <hr />\n          <div className=\"container\">\n            <div className=\"row\">{this.taskColumns()}</div>\n          </div>\n        </div>\n      </LoadableComponent>\n    );\n  }\n\n  taskColumns() {\n    const statusToClasses = {\n      TO_DO: 'bg-secondary text-white',\n      IN_PROGRESS: 'bg-primary text-white',\n      DONE: 'bg-success text-white'\n    };\n    const tasks = this.props.tasks;\n    return mapToElements(statusToClasses, (status, classes) => {\n      return (\n        <TaskBoardColumn\n          key={status}\n          projectId={this.state.projectId}\n          tasks={tasks}\n          status={status}\n          taskClasses={classes}\n        />\n      );\n    });\n  }\n}\n\nTaskBoard.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  getTasks: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tasks: state.task.tasks,\n  isFetching: state.request.isFetching !== false,\n  errors: state.request.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getTasks }\n)(TaskBoard);\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from '../actions/types';\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case GET_PROJECTS:\n      return { ...state, projects: payload };\n    case GET_PROJECT:\n      return { ...state, project: payload };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(p => p.id !== payload)\n      };\n    default:\n      return state;\n  }\n};\n","import { GET_TASK, DELETE_TASK, GET_TASKS } from '../actions/types';\n\nconst initialState = {\n  tasks: [],\n  task: {}\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case GET_TASKS:\n      return { ...state, tasks: payload };\n    case GET_TASK:\n      return { ...state, task: payload };\n    case DELETE_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.filter(p => p.id !== payload)\n      };\n    default:\n      return state;\n  }\n};\n","import { REQUEST_STARTS, REQUEST_FAILS, REQUEST_SUCCEEDS } from '../actions/types';\n\nconst initialState = {};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case REQUEST_STARTS:\n      return {\n        ...state,\n        isFetching: true,\n        errors: {}\n      };\n    case REQUEST_FAILS:\n      return { ...state, errors: payload, isFetching: false };\n    case REQUEST_SUCCEEDS:\n      return { ...state, isFetching: false, errors: {} };\n    default:\n      return state;\n  }\n};\n","import { LOG_IN, LOG_OUT } from '../actions/types';\n\nconst initialState = {};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOG_IN:\n      return { ...state, loggedIn: true };\n    case LOG_OUT:\n      return { ...state, loggedIn: false };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport projectReducer from './projectReducer';\nimport taskReducer from './taskReducer';\nimport requestReducer from './requestReducer';\nimport securityReducer from './securityReducer';\n\nexport default combineReducers({\n  project: projectReducer,\n  task: taskReducer,\n  request: requestReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(thunk))\n);\nexport default store;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ItemForm from '../ItemForm';\nimport { Priority, Status } from './TaskTypes';\n\nclass WriteTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      task: {\n        id: '',\n        summary: '',\n        acceptanceCriteria: '',\n        dueDate: '',\n        priority: 3,\n        status: 'TO_DO'\n      },\n      errors: {}\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.errors !== prevProps.errors) {\n      this.setState(prevState => ({ errors: this.props.errors }));\n    }\n    if (this.props.task !== prevProps.task) {\n      this.setState(prevState => ({ task: this.props.task }));\n    }\n  }\n\n  onChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState((prevState, props) => ({\n      task: {\n        ...prevState.task,\n        [name]: value\n      }\n    }));\n  };\n\n  render() {\n    const fields = [\n      {\n        tag: 'input',\n        type: 'text',\n        name: 'summary',\n        placeholder: 'Task Summary'\n      },\n      {\n        tag: 'textarea',\n        type: 'text',\n        name: 'acceptanceCriteria',\n        placeholder: 'Acceptance Criteria'\n      },\n      {\n        tag: 'input',\n        type: 'date',\n        name: 'dueDate'\n      },\n      {\n        tag: 'select',\n        name: 'priority',\n        options: Priority\n      },\n      {\n        tag: 'select',\n        name: 'status',\n        options: Status\n      }\n    ];\n    const titleFragment = (\n      <React.Fragment>\n        <Link to={`/taskBoard/${this.state.projectId}`} className=\"btn btn-light\">\n          Back to Task Board\n        </Link>\n        <h4 className=\"display-4 text-center\">{this.props.title}</h4>\n        <p className=\"lead text-center\">{this.props.subtitle}</p>\n      </React.Fragment>\n    );\n    return (\n      <ItemForm\n        item={this.state.task}\n        errors={this.state.errors}\n        fields={fields}\n        titleFragment={titleFragment}\n        onChange={this.onChange}\n        submitItem={task => this.props.submitTask(task)}\n      />\n    );\n  }\n}\n\nWriteTask.propTypes = {\n  task: PropTypes.object.isRequired,\n  errors: PropTypes.object,\n  submitTask: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  projectId: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  task: state.task.task,\n  errors: state.request.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(WriteTask);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addTask } from '../../actions/taskActions';\nimport PropTypes from 'prop-types';\nimport WriteTask from './WriteTask';\n\nclass AddTask extends Component {\n  render() {\n    return (\n      <WriteTask\n        title=\"Add Task\"\n        projectId={this.props.match.params.projectId}\n        submitTask={task => this.props.addTask(this.props.match.params.projectId, task, this.props.history)}\n      />\n    );\n  }\n}\n\nAddTask.propTypes = {\n  addTask: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addTask }\n)(AddTask);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTask, updateTask } from '../../actions/taskActions';\nimport PropTypes from 'prop-types';\nimport WriteTask from './WriteTask';\n\nclass UpdateTask extends Component {\n  componentDidMount() {\n    this.props.getTask(this.props.match.params.projectId, this.props.match.params.taskId, this.props.history);\n  }\n\n  render() {\n    return (\n      <WriteTask\n        title=\"Update Task\"\n        subtitle={this.props.task && this.props.task.taskSequence}\n        projectId={this.props.match.params.projectId}\n        submitTask={task => this.props.updateTask(this.props.match.params.projectId, task, this.props.history)}\n      />\n    );\n  }\n}\n\nUpdateTask.propTypes = {\n  getTask: PropTypes.func.isRequired,\n  updateTask: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  task: state.task.task\n});\n\nexport default connect(\n  mapStateToProps,\n  { getTask, updateTask }\n)(UpdateTask);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getLoggedInUser } from '../../security';\nimport { Redirect } from 'react-router-dom';\n\nclass Landing extends Component {\n  render() {\n    if (getLoggedInUser()) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\n                <p className=\"lead\">Create your account to join active projects or start your own</p>\n                <hr />\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport ItemForm from '../ItemForm';\nimport { createNewUser } from '../../actions/securityActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getLoggedInUser } from '../../security';\nimport { Redirect } from 'react-router-dom';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      registration: {\n        username: '',\n        fullName: '',\n        password: '',\n        confirmPassword: ''\n      },\n      errors: {}\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.errors !== prevProps.errors) {\n      this.setState(prevState => ({ errors: this.props.errors }));\n    }\n  }\n\n  onChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState((prevState, props) => ({\n      registration: {\n        ...prevState.registration,\n        [name]: value\n      }\n    }));\n  };\n\n  render() {\n    if (getLoggedInUser()) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    const fields = [\n      {\n        tag: 'input',\n        type: 'text',\n        name: 'fullName',\n        placeholder: 'Full Name'\n      },\n      {\n        tag: 'input',\n        type: 'text',\n        name: 'username',\n        placeholder: 'Email Address'\n      },\n      {\n        tag: 'input',\n        type: 'password',\n        name: 'password',\n        placeholder: 'Password'\n      },\n      {\n        tag: 'input',\n        type: 'password',\n        name: 'confirmPassword',\n        placeholder: 'Confirm Password'\n      }\n    ];\n    const titleFragment = (\n      <React.Fragment>\n        <h1 className=\"display-4 text-center\">Sign Up</h1>\n        <p className=\"lead text-center\">Create your Account</p>\n      </React.Fragment>\n    );\n    return (\n      <ItemForm\n        item={this.state.registration}\n        fields={fields}\n        titleFragment={titleFragment}\n        errors={this.state.errors}\n        onChange={this.onChange}\n        submitItem={newUser => this.props.createNewUser(newUser, this.props.history)}\n      />\n    );\n  }\n}\n\nRegister.propTypes = {\n  errors: PropTypes.object,\n  createNewUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.request.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import axios from 'axios';\nimport handleRequest from './request';\nimport { LOG_IN, LOG_OUT } from './types';\n\nexport const createNewUser = (newUser, history) => dispatch => {\n  const requestFn = () => axios.post('/api/user/register', newUser);\n  handleRequest(dispatch, undefined, requestFn, () => history.push('/login'));\n};\n\nexport const logIn = (user, history) => dispatch => {\n  const requestFn = () => axios.post('/api/user/login', user);\n  const successFn = res => history.push('/dashboard');\n  handleRequest(dispatch, LOG_IN, requestFn, successFn);\n};\n\nexport const logOut = (user, history) => dispatch => {\n  const requestFn = () => axios.post('/api/user/login', user);\n  const successFn = history.push('/login');\n  handleRequest(dispatch, LOG_OUT, requestFn, successFn);\n};\n","import React, { Component } from 'react';\nimport ItemForm from '../ItemForm';\nimport { logIn } from '../../actions/securityActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getLoggedInUser } from '../../security';\nimport { Redirect } from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: {\n        username: '',\n        password: ''\n      },\n      errors: {}\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.errors !== prevProps.errors) {\n      this.setState(prevState => ({ errors: this.props.errors }));\n    }\n  }\n\n  onChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState((prevState, props) => ({\n      login: {\n        ...prevState.login,\n        [name]: value\n      }\n    }));\n  };\n\n  render() {\n    if (getLoggedInUser()) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    const fields = [\n      {\n        tag: 'input',\n        type: 'text',\n        name: 'username',\n        placeholder: 'Email Address'\n      },\n      {\n        tag: 'input',\n        type: 'password',\n        name: 'password',\n        placeholder: 'Password'\n      }\n    ];\n    const titleFragment = <h1 className=\"display-4 text-center\">Log In</h1>;\n    return (\n      <ItemForm\n        item={this.state.login}\n        fields={fields}\n        titleFragment={titleFragment}\n        errors={this.state.errors}\n        onChange={this.onChange}\n        submitItem={user => this.props.logIn(user, this.props.history)}\n      />\n    );\n  }\n}\n\nLogin.propTypes = {\n  errors: PropTypes.object,\n  logIn: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.request.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { logIn }\n)(Login);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getLoggedInUser } from '../../security';\n\nconst SecuredRoute = ({ component: Component, ...otherProps }) => {\n  const render = props => (getLoggedInUser() ? <Component {...props} /> : <Redirect to=\"/login\" />);\n  return <Route {...otherProps} render={render} />;\n};\nexport default SecuredRoute;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport AddProject from './components/Project/AddProject';\nimport UpdateProject from './components/Project/UpdateProject';\nimport TaskBoard from './components/Task/TaskBoard';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport AddTask from './components/Task/AddTask';\nimport UpdateTask from './components/Task/UpdateTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport SecuredRoute from './components/UserManagement/SecuredRoute';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              // public routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            {\n              // private routes\n            }\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n            <SecuredRoute exact path=\"/taskBoard/:projectId\" component={TaskBoard} />\n            <SecuredRoute exact path=\"/taskBoard/:projectId/addTask\" component={AddTask} />\n            <SecuredRoute exact path=\"/taskBoard/:projectId/updateTask/:taskId\" component={UpdateTask} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}